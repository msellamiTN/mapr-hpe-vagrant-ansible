# Uninstall POSIX clients first, otherwise if user changes from NFS to Fuse it will conflict.
- import_playbook: mapr-include-vars.yml
- name: Uninstall NFS v3
  become: true
  hosts: all:!mapr-nfs-v3
  roles:
    - ../roles/mapr-nfs-v3-uninstall
- name: Uninstall mapr-posix-client-basic (FUSE)
  become: true
  hosts: all:!mapr-posix-client-basic
  roles:
    - ../roles/mapr-patch-posix-client-basic-uninstall
    - ../roles/mapr-posix-client-basic-uninstall
- name: Uninstall mapr-posix-client-platinum (FUSE)
  become: true
  hosts: all:!mapr-posix-client-platinum
  roles:
    - ../roles/mapr-patch-posix-client-platinum-uninstall
    - ../roles/mapr-posix-client-platinum-uninstall

# used by configure.sh and drill
- name: Setup global vars
  become: true
  hosts: all
  become: true
  roles:
    - ../roles/mapr-global-vars
    - ../roles/mapr-configure-vars-zk
    - ../roles/mapr-configure-vars-cldb
    - ../roles/mapr-configure-vars-rm
    - ../roles/mapr-configure-vars-hs
- name: Install MapR Core
  become: true
  hosts: mapr-core
  roles:
    - ../roles/mapr-core-install
    - ../roles/mapr-configure-env-override
- name: Install Zookeeper
  become: true
  hosts: mapr-zookeeper
  roles:
    - ../roles/mapr-zookeeper-install
- name: Uninstall Zookeeper
  become: true
  hosts: all:!mapr-zookeeper
  roles:
    - ../roles/mapr-zookeeper-uninstall
- name: Count Zookeeper changes
  become: true
  hosts: all
  roles:
    - ../roles/mapr-zookeeper-changes
- name: Install CLDB
  become: true
  hosts: mapr-cldb
  roles:
    - ../roles/mapr-cldb-install
- name: Uninstall CLDB
  become: true
  hosts: all:!mapr-cldb
  roles:
    - ../roles/mapr-cldb-uninstall
- name: Count CLDB changes
  become: true
  hosts: all
  roles:
    - ../roles/mapr-cldb-changes
- name: Install Gateway
  become: true
  hosts: mapr-gateway
  roles:
    - ../roles/mapr-gateway-install
- name: Uninstall Gateway
  become: true
  hosts: all:!mapr-gateway
  roles:
    - ../roles/mapr-gateway-uninstall
- name: Install MAST-Gateway
  hosts: mapr-mastgateway
  roles:
    - ../roles/mapr-gateway-install
- name: Uninstall MAST-Gateway
  become: true
  hosts: all:!mapr-mastgateway
  roles:
    - ../roles/mapr-mastgateway-uninstall
- name: Install MapR-Fileserver
  become: true
  hosts: mapr-fileserver
  roles:
    - ../roles/mapr-fileserver-install
- name: Uninstall MapR-Fileserver
  become: true
  hosts: all:!mapr-fileserver
  roles:
    - ../roles/mapr-fileserver-uninstall
- name: Install YARN Node Manager
  become: true
  hosts: mapr-nodemanager
  roles:
    - ../roles/mapr-nodemanager-install
- name: Uninstall YARN Node Manager
  become: true
  hosts: all:!mapr-nodemanager
  roles:
    - ../roles/mapr-nodemanager-uninstall
- name: Install YARN Resource Manager
  become: true
  hosts: mapr-resourcemanager
  roles:
    - ../roles/mapr-resourcemanager-install
- name: Uninstall YARN Resource Manager
  become: true
  hosts: all:!mapr-resourcemanager
  roles:
    - ../roles/mapr-resourcemanager-uninstall
- name: Install History Server
  become: true
  hosts: mapr-historyserver
  roles:
    - ../roles/mapr-historyserver-install
- name: Uninstall History Server
  become: true
  hosts: all:!mapr-historyserver
  roles:
    - ../roles/mapr-historyserver-uninstall
- name: Count Historyserver changes
  become: true
  hosts: all
  roles:
    - ../roles/mapr-historyserver-changes
- name: Install MCS
  become: true
  hosts: mapr-mcs
  roles:
    - ../roles/mapr-mcs-install
- name: Uninstall MCS
  become: true
  hosts: all:!mapr-mcs
  roles:
    - ../roles/mapr-mcs-uninstall
- name: Install NFS v3
  become: true
  hosts: mapr-nfs-v3
  roles:
    - ../roles/mapr-nfs-v3-install
# uninstall NFS on top
- name: Configure with genkeys (native-security)
  become: true
  hosts: mapr-cldb[0]
  roles:
  - {role: ../roles/mapr-configure-nativesecurity-secure-genkeys, when: mapr_security == 'maprsasl' }
- name: Configure with genkeys (kerberos)
  become: true
  hosts: mapr-cldb[0]
  roles:
  - {role: ../roles/mapr-configure-kerberos-genkeys, when: mapr_security == 'kerberos' }
- name: Fetch keys, when no CLDB change happened
  become: true
  hosts: mapr-cldb[0]
  roles:
   - {role: ../roles/mapr-configure-security-fetch-keys, when: mapr_security != 'none' }
- name: Roll out custom SSL certificates
  become: true
  hosts: mapr-core
  roles:
  - {role: ../roles/mapr-core-customssl, when: https_custom_certs_enabled }
- name: Configure and start (unsecure)
  become: true
  hosts: mapr-core
  roles:
   - {role: ../roles/mapr-configure-unsecure, when: mapr_security == 'none' and (force_reconfigure_sh or (zookeeper_changes|int) > 0  or (cldb_changes|int) > 0 or (core_local_changes|int) > 0 or (mfs_local_changes|int) > 0 or (historyserver_changes|int) > 0)}
- name: Configure and start (native-security)
  become: true
  hosts: mapr-core
  roles:
   - {role: ../roles/mapr-configure-nativesecurity-secure, when: mapr_security == 'maprsasl' and (force_reconfigure_sh or (zookeeper_changes|int) > 0  or (cldb_changes|int) > 0 or (core_local_changes|int) > 0 or (mfs_local_changes|int) > 0 or (historyserver_changes|int) > 0)}
- name: Configure and start (kerberos)
  become: true
  hosts: mapr-core
  roles:
   - {role: ../roles/mapr-configure-kerberos, when: mapr_security == 'kerberos' and (force_reconfigure_sh or (zookeeper_changes|int) > 0  or (cldb_changes|int) > 0 or (core_local_changes|int) > 0 or (mfs_local_changes|int) > 0 or (historyserver_changes|int) > 0)}
- name: Disk setup
  become: true
  hosts: mapr-fileserver:mapr-nodemanager:mapr-cldb
  roles:
   - ../roles/mapr-configure-disks
- name: Restarting mapr-zookeeper (rolling)
  become: true
  hosts: mapr-zookeeper
  roles:
   - { role: ../roles/mapr-configure-zookeeper-restart, when: rolling_restart and (force_zookeeper_restart or (zookeeper_changes|int) > 0) }
  serial: 1
- name: Restarting mapr-zookeeper
  become: true
  hosts: mapr-zookeeper
  roles:
   - { role: ../roles/mapr-configure-zookeeper-restart, when: not rolling_restart and (force_zookeeper_restart or (zookeeper_changes|int) > 0) }

- name: Restarting mapr-warden (rolling)
  become: true
  hosts: mapr-fileserver:mapr-nodemanager:!mapr-cldb
  roles:
   - { role: ../roles/mapr-configure-warden-restart, when: not graceful_restart and rolling_restart and (force_warden_restart or (zookeeper_changes|int) > 0  or (cldb_changes|int) > 0 or (core_local_changes|int) > 0 or (mfs_local_changes|int) > 0 or (historyserver_changes|int) > 0) }
   - { role: ../roles/mapr-configure-warden-restart-gracefully, when: graceful_restart and rolling_restart and (force_warden_restart or (zookeeper_changes|int) > 0  or (cldb_changes|int) > 0 or (core_local_changes|int) > 0 or (mfs_local_changes|int) > 0 or (historyserver_changes|int) > 0) }
  serial: 1

- name: Restarting mapr-warden on CLDB nodes (rolling)
  become: true
  hosts: mapr-cldb
  roles:
   - { role: ../roles/mapr-configure-warden-cldb-restart, when: not graceful_restart and rolling_restart and (force_warden_restart or (zookeeper_changes|int) > 0  or (cldb_changes|int) > 0 or (core_local_changes|int) > 0 or (mfs_local_changes|int) > 0 or (historyserver_changes|int) > 0)}
   - { role: ../roles/mapr-configure-warden-cldb-restart-gracefully, when: graceful_restart and rolling_restart and (force_warden_restart or (zookeeper_changes|int) > 0  or (cldb_changes|int) > 0 or (core_local_changes|int) > 0 or (mfs_local_changes|int) > 0 or (historyserver_changes|int) > 0)}
  serial: 1

- name: Restarting mapr-warden
  become: true
  hosts: mapr-fileserver:mapr-nodemanager
  roles:
   - { role: ../roles/mapr-configure-warden-restart, when: not rolling_restart and (force_warden_restart or (zookeeper_changes|int) > 0  or (cldb_changes|int) > 0 or (core_local_changes|int) > 0 or (mfs_local_changes|int) > 0 or (historyserver_changes|int) > 0)}

- name: Install mapr-posix-client-basic (FUSE)
  hosts: mapr-posix-client-basic
  become: true
  roles:
    - ../roles/mapr-posix-client-basic-install
    - {role: ../roles/mapr-patch-posix-client-basic-install, when: mapr_patch_url is defined and ansible_os_family != 'Debian'}
# uninstall Fuse on top
- name: Install mapr-posix-client-platinum (FUSE)
  become: true
  hosts: mapr-posix-client-platinum
  roles:
    - ../roles/mapr-posix-client-platinum-install
    - {role: ../roles/mapr-patch-posix-client-platinum-install, when: mapr_patch_url is defined and ansible_os_family != 'Debian'}

# Local cleanup of security relevant files
# - hosts: 127.0.0.1
#   connection: local
#   roles:
#     - {role: ../roles/mapr-configure-cleanup, when: cleanup_local_keys }
